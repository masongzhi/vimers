function clearTimer(t){return t?clearInterval:clearTimeout}function setTimer(t){return t?setInterval:setTimeout}function generateTimer(t){return setTimer(t.repeat)(()=>{t.vm.$emit("timer-tick:"+t.name),t.callback()},t.time)}class Timer{constructor(t,e){if("production"!==process.env.NODE_ENV){if(!t.name)throw new Error("[vimers.create] name is required");if(!t.callback&&"function"!=typeof e[t.name])throw new ReferenceError("[vimers.create] Cannot find method "+t.name);if(t.callback&&"function"!=typeof t.callback)throw new TypeError("[vimers.create] Timer callback should be a function, "+typeof t.callback+" given")}this.name=t.name,this.time=t.time||0,this.repeat="repeat"in t&&t.repeat,this.immediate="immediate"in t&&t.immediate,this.callback=t.callback&&t.callback.bind(e)||e[t.name],this.instance=null,this.isRunning=!1,this.vm=e}start(){this.isRunning||(this.isRunning=!0,this.instance=generateTimer(this),this.immediate&&(this.vm.$emit("timer-tick:"+this.name),this.callback()),this.vm.$emit("timer-start:"+this.name))}stop(){this.isRunning&&(clearTimer(this.repeat)(this.instance),this.isRunning=!1,this.vm.$emit("timer-stop:"+this.name))}restart(){this.stop(),this.start(),this.vm.$emit("timer-restart:"+this.name)}}function generateOptions(t){return Array.isArray(t)?t.reduce((t,e)=>(t[e.name]=e,t),{}):t}function generateData(t,e){return Object.keys(t).reduce((i,s)=>(i[s]=new Timer({...t[s],name:s},e),i),{})}const METHODS=["start","stop","restart"];var mixin={data(){return this.$options.timers?(this.$options.timers=generateOptions(this.$options.timers),{timers:generateData(this.$options.timers,this)}):{}},created(){this.$options.timers&&(this.$timer=METHODS.reduce((t,e)=>(t[e]=(t=>{if("production"!==process.env.NODE_ENV&&!(t in this.$options.timers))throw new ReferenceError(`[vimers.${e}] Cannot find timer ${t}`);this.timers[t][e]()}),t),{}))},mounted(){if(!this.$options.timers)return;const t=this.$options.timers;Object.keys(t).forEach(e=>{t[e].autostart&&this.$timer.start(e)})},activated(){if(!this.$options.timers)return;const t=this.timers,e=this.$options.timers;Object.keys(e).forEach(i=>{e[i].isSwitchTab&&t[i].instance&&this.$timer.start(i)})},deactivated:function(){if(!this.$options.timers)return;const t=this.timers,e=this.$options.timers;Object.keys(e).forEach(i=>{e[i].isSwitchTab&&t[i].instance&&this.$timer.stop(i)})},beforeDestroy(){this.$options.timers&&Object.keys(this.$options.timers).forEach(t=>{this.$timer.stop(t)})}};function index(t){t.mixin(mixin)}export default index;
